AWSTemplateFormatVersion: 2010-09-09
Description: "Creates: - 1 vpc with cdirblock assign - 2 pub sub in your choice of\
  \ AZ with cdirblock assign and public IPs enabled - 2 priv sub in your choice of\
  \ AZ with cdirblock assign and public IPs disabled - 1 IGW attached to the vpc -\
  \ 1 pub route table associated to the pub sub - 1 priv route table associated to\
  \ the priv sub - 1 network ACL for pub sub with all inbound/outbound rules allow\
  \ - 1 network ACL for priv sub with local IPs ssh inbound access and all outbout\
  \ rules allow \n!!WARNING!! If you choose to rename anything in this template, please\
  \ make sure you update all the \"!Ref\" value."
Parameters:
  CidrBlockAssignment:
    Description: Will assign a CidrBlock to your vpc and subnets depending on your
      AllowedValue choice
    Type: String
    Default: test
    AllowedValues:
    - development
    - test
    - production
    ConstraintDescription: must be development or test or production
  VpcTenancy:
    Type: String
    Default: default
    AllowedValues:
    - default
    - dedicated
  VpcTagKey:
    Description: Custom vpc tag key
    Type: String
    Default: Name
  VpcTagValue:
    Description: Custom vpc tag value
    Type: String
    Default: vpctest
  PublicSubnet1AZ:
    Description: Select the AZ for this subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  PublicSubnet2AZ:
    Description: Select the AZ for this subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
  PrivateSubnet1AZ:
    Description: Select the AZ for this subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1c
  PrivateSubnet2AZ:
    Description: Select the AZ for this subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1d
Mappings:
  VpcEnvironmentMap:
    development:
      CidrBlock: 192.168.0.0/20
    test:
      CidrBlock: 10.0.0.0/16
    production:
      CidrBlock: 10.0.0.0/20
  PubSub1CidrBlockMap:
    development:
      CidrBlock: 192.168.0.0/22
    test:
      CidrBlock: 10.0.0.0/18
    production:
      CidrBlock: 10.0.0.0/22
  PubSub2CidrBlockMap:
    development:
      CidrBlock: 192.168.4.0/22
    test:
      CidrBlock: 10.0.64.0/18
    production:
      CidrBlock: 10.0.4.0/22
  PrivSub1CidrBlockMap:
    development:
      CidrBlock: 192.168.8.0/22
    test:
      CidrBlock: 10.0.128.0/18
    production:
      CidrBlock: 10.0.8.0/22
  PrivSub2CidrBlockMap:
    development:
      CidrBlock: 192.168.12.0/22
    test:
      CidrBlock: 10.0.192.0/18
    production:
      CidrBlock: 10.0.14.0/23
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Fn::FindInMap:
        - VpcEnvironmentMap
        - Ref: CidrBlockAssignment
        - CidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy:
        Ref: VpcTenancy
      Tags:
      - Key:
          Ref: VpcTagKey
        Value:
          Ref: VpcTagValue
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: PublicSubnet1AZ
      CidrBlock:
        Fn::FindInMap:
        - PubSub1CidrBlockMap
        - Ref: CidrBlockAssignment
        - CidrBlock
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: PubSub1
      VpcId:
        Ref: VPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: PublicSubnet2AZ
      CidrBlock:
        Fn::FindInMap:
        - PubSub2CidrBlockMap
        - Ref: CidrBlockAssignment
        - CidrBlock
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: PubSub2
      VpcId:
        Ref: VPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: PrivateSubnet1AZ
      CidrBlock:
        Fn::FindInMap:
        - PrivSub1CidrBlockMap
        - Ref: CidrBlockAssignment
        - CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: PrivSub1
      VpcId:
        Ref: VPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: PrivateSubnet2AZ
      CidrBlock:
        Fn::FindInMap:
        - PrivSub2CidrBlockMap
        - Ref: CidrBlockAssignment
        - CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: PrivSub2
      VpcId:
        Ref: VPC
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Igw
  IgwVpcAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: IGW
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: PubRoute
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IgwVpcAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGW
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: PrivRoute
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable
  PublicNacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: PubNacl
  PublicNaclInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  PublicNaclOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNacl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  PublicSubnet1NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      NetworkAclId:
        Ref: PublicNacl
  PublicSubnet2NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      NetworkAclId:
        Ref: PublicNacl
  PrivateNacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: PrivNacl
  PrivNaclInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNacl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      PortRange:
        From: 22
        To: 22
      CidrBlock:
        Fn::FindInMap:
        - VpcEnvironmentMap
        - Ref: CidrBlockAssignment
        - CidrBlock
  PrivNaclOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivateNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
  PrivSubnet1NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      NetworkAclId:
        Ref: PrivateNacl
  PrivSubnet2NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      NetworkAclId:
        Ref: PrivateNacl
Outputs:
  VPC:
    Description: VPC ID
    Value:
      Ref: VPC
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-Vpc
  PublicSubnet1:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: PublicSubnet1
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-pubsub1
  PublicSubnet2:
    Description: The subnet ID to use for public web servers
    Value:
      Ref: PublicSubnet2
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-pubsub2
  PrivateSubnet1:
    Description: The subnet ID to use for private web servers
    Value:
      Ref: PrivateSubnet1
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-privsub1
  PrivateSubnet2:
    Description: The subnet ID to use for private web servers
    Value:
      Ref: PublicSubnet2
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-privsub2
